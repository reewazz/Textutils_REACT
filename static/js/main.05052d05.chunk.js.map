{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleRMode","role","htmlFor","toggleMode","Textform","useState","text","settext","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newtext","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","length","Alert","alert","class","msg","App","setMode","setAlert","message","setTimeout","about","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05052d05.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link  } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return <div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n                        </li> */}\r\n                        {/* <li className=\"nav-item dropdown\">\r\n                            <Link className=\"nav-link dropdown-toggle\" to=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                \r\n\r\n                            </Link>\r\n                            <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                                <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                                <li><hr className=\"dropdown-divider\" /></li>\r\n                                <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n                            </ul>\r\n                        </li> */}\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-link disabled\" href=\"/\">Disabled</a>\r\n                        </li> */}\r\n                        <li className=\"nav-item\">\r\n                         <div className={`form-check form-switch mx-5 my-1 text-${props.mode==='light'?'red':'light'}`}>\r\n                                <input className=\"form-check-input\" onClick={props.toggleRMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                               <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Red Mode</label> \r\n                               \r\n                                  \r\n</div>\r\n  </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                \r\n               \r\n</div> \r\n\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n    </div>;\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string\r\n}\r\n","import React, { useState } from 'react';\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handleOnChange = (event) => {\r\n        console.log(\"on change\");\r\n        settext(event.target.value);\r\n    }\r\n\r\n    const handleupClick = () => {\r\n        console.log(\"uppercase was clicked\");\r\n        let newtext = text.toUpperCase();\r\n        settext(newtext);\r\n        props.showAlert(\"Converted to uppercase!!\",\"success\");\r\n    }\r\n    const handleloClick = () => {\r\n        console.log(\"uppercase was clicked\");\r\n        let newtext = text.toLowerCase();\r\n        settext(newtext);\r\n        props.showAlert(\"Converted to lowercase!!\",\"success\");\r\n    }\r\n    const handlecopy = () => {\r\n        navigator.clipboard.writeText(text)\r\n    }\r\n\r\n\r\n    const [text, settext] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color:props.mode==='dark'?'white':'#0b153d'}}>\r\n                <h1>\r\n                    {props.heading}\r\n                </h1>\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange}  style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#0b153d'}}id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleupClick}>Convert to uppercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleloClick}>Convert to lowercase</button>\r\n                <button className='btn btn-primary mx-2' onClick={handlecopy}>Copy to clipboard </button>\r\n\r\n            </div>;\r\n            <div className=\"container my-2\" style={{color:props.mode==='dark'?'white':'#0b153d'}}>\r\n                <h1>Your text summary</h1>\r\n                <p>{text.split(\" \").length - 1} words {text.length} characters</p>\r\n                <p> {0.008 * text.split(\" \").length} Minutes to read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:'write something to preview here'}</p>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nfunction Alert(props) {\r\n  return props.alert &&<div>\r\n      <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n  \r\n</div>\r\n  </div>;\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n\n} from \"react-router-dom\";\n\nfunction App() {\n   const [mode, setMode] = useState('light'); //check whether dark mode or not\n   const [alert, setAlert] = useState(null);\n\n       const showAlert = (message,type)=>{\n        setAlert({\n           msg:message,\n         type:type\n        });\n        setTimeout(() => {\n          showAlert(null);\n        }, 1500);\n       }\n   \n        const toggleMode = ()=> {\n          if(mode === 'light'){\n            setMode('dark');\n            document.body.style.backgroundColor= '#0b153d';\n            showAlert(\"Dark mode has been enabled\",\"success\");\n            document.title = \"TextUtils-Darkmode\";\n            \n          \n          }\n          else{\n            setMode('light');\n            document.body.style.backgroundColor= 'white';\n            showAlert(\"Light mode has been enabled\",\"Success\");\n            document.title = \"TextUtils-Lightmode\";\n            \n          }\n        }\n        const toggleRMode = ()=>{\n          if(mode === 'light'){\n            setMode('red');\n            document.body.style.backgroundColor= 'red';\n            showAlert(\"Red mode has been enabled\",\"success\");\n            document.title = \"TextUtils-Redmode\";\n        }\n        else{\n          setMode('light');\n          document.body.style.backgroundColor= 'white';\n          showAlert(\"Light mode has been enabled\",\"Success\");\n          document.title = \"TextUtils-Lightmode\";\n      }}\n          return (\n    <>\n      <div>\n        {/* <Router> */}\n        <Navbar title=\"Textutils\" about=\"About\" mode={mode} toggleMode={toggleMode} toggleRMode={toggleRMode}/>\n        <Alert alert={alert}/>\n\n        <div className=\"container\">\n        {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <Textform heading=\"Enter any text below\" mode={mode} showAlert={showAlert}/>\n          {/* </Route>\n        </Switch> */}\n        </div>\n        {/* </Router> */}\n          \n       \n      \n        {/* <div className=\"container my-3\"><About/></div> */}\n        \n      </div>\n    </>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}